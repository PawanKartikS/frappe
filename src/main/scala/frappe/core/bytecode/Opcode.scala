package frappe.core.bytecode

object Opcode extends Enumeration {
  type Opcode = Value

  val NOP: Value           = Value(0x0)
  val ACONST_NULL: Value   = Value(0x1)
  val ICONST_M1: Value     = Value(0x2)
  val ICONST_0: Value      = Value(0x3)
  val ICONST_1: Value      = Value(0x4)
  val ICONST_2: Value      = Value(0x5)
  val ICONST_3: Value      = Value(0x6)
  val ICONST_4: Value      = Value(0x7)
  val ICONST_5: Value      = Value(0x8)
  val LCONST_0: Value      = Value(0x9)
  val LCONST_1: Value      = Value(0x0a)
  val FCONST_0: Value      = Value(0x0b)
  val FCONST_1: Value      = Value(0x0c)
  val FCONST_2: Value      = Value(0x0d)
  val DCONST_0: Value      = Value(0x0e)
  val DCONST_1: Value      = Value(0x0f)
  val BIPUSH: Value        = Value(0x10)
  val LDC: Value           = Value(0x12)
  val LDC2_W: Value        = Value(0x14)
  val ILOAD: Value         = Value(0x15)
  val LLOAD: Value         = Value(0x16)
  val FLOAD: Value         = Value(0x17)
  val DLOAD: Value         = Value(0x18)
  val ALOAD: Value         = Value(0x19)
  val ILOAD_0: Value       = Value(0x1a)
  val ILOAD_1: Value       = Value(0x1b)
  val ILOAD_2: Value       = Value(0x1c)
  val ILOAD_3: Value       = Value(0x1d)
  val LLOAD_0: Value       = Value(0x1e)
  val LLOAD_1: Value       = Value(0x1f)
  val LLOAD_2: Value       = Value(0x20)
  val LLOAD_3: Value       = Value(0x21)
  val FLOAD_0: Value       = Value(0x22)
  val FLOAD_1: Value       = Value(0x23)
  val FLOAD_2: Value       = Value(0x24)
  val FLOAD_3: Value       = Value(0x25)
  val DLOAD_0: Value       = Value(0x26)
  val DLOAD_1: Value       = Value(0x27)
  val DLOAD_2: Value       = Value(0x28)
  val DLOAD_3: Value       = Value(0x29)
  val ALOAD_0: Value       = Value(0x2a)
  val ALOAD_1: Value       = Value(0x2b)
  val ALOAD_2: Value       = Value(0x2c)
  val ALOAD_3: Value       = Value(0x2d)
  val IALOAD: Value        = Value(0x2e)
  val LALOAD: Value        = Value(0x2f)
  val FALOAD: Value        = Value(0x30)
  val DALOAD: Value        = Value(0x31)
  val AALOAD: Value        = Value(0x32)
  val BALOAD: Value        = Value(0x33)
  val CALOAD: Value        = Value(0x34)
  val SALOAD: Value        = Value(0x35)
  val ISTORE: Value        = Value(0x36)
  val LSTORE: Value        = Value(0x37)
  val FSTORE: Value        = Value(0x38)
  val DSTORE: Value        = Value(0x39)
  val ASTORE: Value        = Value(0x3a)
  val ISTORE_0: Value      = Value(0x3b)
  val ISTORE_1: Value      = Value(0x3c)
  val ISTORE_2: Value      = Value(0x3d)
  val ISTORE_3: Value      = Value(0x3e)
  val LSTORE_0: Value      = Value(0x3f)
  val LSTORE_1: Value      = Value(0x40)
  val LSTORE_2: Value      = Value(0x41)
  val LSTORE_3: Value      = Value(0x42)
  val FSTORE_0: Value      = Value(0x43)
  val FSTORE_1: Value      = Value(0x44)
  val FSTORE_2: Value      = Value(0x45)
  val FSTORE_3: Value      = Value(0x46)
  val DSTORE_0: Value      = Value(0x47)
  val DSTORE_1: Value      = Value(0x48)
  val DSTORE_2: Value      = Value(0x49)
  val DSTORE_3: Value      = Value(0x4a)
  val ASTORE_0: Value      = Value(0x4b)
  val ASTORE_1: Value      = Value(0x4c)
  val ASTORE_2: Value      = Value(0x4d)
  val ASTORE_3: Value      = Value(0x4e)
  val IASTORE: Value       = Value(0x4f)
  val LASTORE: Value       = Value(0x50)
  val FASTORE: Value       = Value(0x51)
  val DASTORE: Value       = Value(0x52)
  val AASTORE: Value       = Value(0x53)
  val BASTORE: Value       = Value(0x54)
  val CASTORE: Value       = Value(0x55)
  val SASTORE: Value       = Value(0x56)
  val POP: Value           = Value(0x57)
  val POP2: Value          = Value(0x58)
  val DUP: Value           = Value(0x59)
  val SWAP: Value          = Value(0x5f)
  val IADD: Value          = Value(0x60)
  val LADD: Value          = Value(0x61)
  val FADD: Value          = Value(0x62)
  val DADD: Value          = Value(0x63)
  val IINC: Value          = Value(0x84)
  val IFEQ: Value          = Value(0x99)
  val IFNE: Value          = Value(0x9a)
  val IFLT: Value          = Value(0x9b)
  val IFGE: Value          = Value(0x9c)
  val IFGT: Value          = Value(0x9d)
  val IFLE: Value          = Value(0x9e)
  val IF_ICMPEQ: Value     = Value(0x9f)
  val IF_ICMPNE: Value     = Value(0xa0)
  val IF_ICMPLT: Value     = Value(0xa1)
  val IF_ICMPGE: Value     = Value(0xa2)
  val IF_ICMPGT: Value     = Value(0xa3)
  val IF_ICMPLE: Value     = Value(0xa4)
  val GOTO: Value          = Value(0xa7)
  val IRETURN: Value       = Value(0xac)
  val LRETURN: Value       = Value(0xad)
  val FRETURN: Value       = Value(0xae)
  val DRETURN: Value       = Value(0xaf)
  val ARETURN: Value       = Value(0xb0)
  val RETURN: Value        = Value(0xb1)
  val GETFIELD: Value      = Value(0xb4)
  val PUTFIELD: Value      = Value(0xb5)
  val INVOKEVIRTUAL: Value = Value(0xb6)
  val INVOKESPECIAL: Value = Value(0xb7)
  val INVOKESTATIC: Value  = Value(0xb8)
  val NEW: Value           = Value(0xbb)
  val NEWARRAY: Value      = Value(0xbc)
  val ANEWARRAY: Value     = Value(0xbd)
  val ARRAYLENGTH: Value   = Value(0xbe)
  val IFNULL: Value        = Value(0xc6)
  val IFNONNULL: Value     = Value(0xc7)
  val BREAKPOINT: Value    = Value(0xca)

  def from(opcode: Byte): Option[Value] = values.find(v => v.id == (opcode & 0xff))
}
